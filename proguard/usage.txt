com.android.vending.licensing.AESObfuscator:
    private static final java.lang.String UTF8
    private static final java.lang.String KEYGEN_ALGORITHM
    private static final java.lang.String CIPHER_ALGORITHM
    private static final java.lang.String header
com.android.vending.licensing.ILicenseResultListener$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_verifyLicense
com.android.vending.licensing.ILicenseResultListener$Stub$Proxy:
    79:79:public java.lang.String getInterfaceDescriptor()
com.android.vending.licensing.ILicensingService$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_checkLicense
    40:40:public android.os.IBinder asBinder()
com.android.vending.licensing.ILicensingService$Stub$Proxy:
    79:79:public java.lang.String getInterfaceDescriptor()
com.android.vending.licensing.LicenseChecker:
    private static final java.lang.String TAG
    private static final java.lang.String KEY_FACTORY_ALGORITHM
    private static final int TIMEOUT_MS
com.android.vending.licensing.LicenseValidator:
    private static final java.lang.String TAG
    private static final int LICENSED
    private static final int NOT_LICENSED
    private static final int LICENSED_OLD_KEY
    private static final int ERROR_NOT_MARKET_MANAGED
    private static final int ERROR_SERVER_FAILURE
    private static final int ERROR_OVER_QUOTA
    private static final int ERROR_CONTACTING_SERVER
    private static final int ERROR_INVALID_PACKAGE_NAME
    private static final int ERROR_NON_MATCHING_UID
    private static final java.lang.String SIGNATURE_ALGORITHM
com.android.vending.licensing.PreferenceObfuscator:
    private static final java.lang.String TAG
com.android.vending.licensing.R
com.android.vending.licensing.R$array
com.android.vending.licensing.R$attr
com.android.vending.licensing.R$color
com.android.vending.licensing.R$drawable
com.android.vending.licensing.R$id
com.android.vending.licensing.R$layout
com.android.vending.licensing.R$menu
com.android.vending.licensing.R$string
com.android.vending.licensing.R$xml
com.android.vending.licensing.ServerManagedPolicy:
    private static final java.lang.String TAG
    private static final java.lang.String PREFS_FILE
    private static final java.lang.String PREF_LAST_RESPONSE
    private static final java.lang.String PREF_VALIDITY_TIMESTAMP
    private static final java.lang.String PREF_RETRY_UNTIL
    private static final java.lang.String PREF_MAX_RETRIES
    private static final java.lang.String PREF_RETRY_COUNT
    private static final java.lang.String DEFAULT_VALIDITY_TIMESTAMP
    private static final java.lang.String DEFAULT_RETRY_UNTIL
    private static final java.lang.String DEFAULT_MAX_RETRIES
    private static final java.lang.String DEFAULT_RETRY_COUNT
    private static final long MILLIS_PER_MINUTE
    162:162:public long getRetryCount()
    188:188:public long getValidityTimestamp()
    214:214:public long getRetryUntil()
    240:240:public long getMaxRetries()
com.android.vending.licensing.StrictPolicy
com.android.vending.licensing.ValidationException:
    private static final long serialVersionUID
com.android.vending.licensing.util.Base64:
    public static final boolean ENCODE
    public static final boolean DECODE
    private static final byte EQUALS_SIGN
    private static final byte NEW_LINE
    private static final byte WHITE_SPACE_ENC
    private static final byte EQUALS_SIGN_ENC
    258:258:public static java.lang.String encodeWebSafe(byte[],boolean)
    431:432:public static byte[] decodeWebSafe(java.lang.String)
    445:445:public static byte[] decode(byte[])
    458:458:public static byte[] decodeWebSafe(byte[])
    489:489:public static byte[] decodeWebSafe(byte[],int,int)
com.android.vending.licensing.util.Base64DecoderException:
    private static final long serialVersionUID
com.spatialind.imoboard.Contact:
    private float course
    private float speed
    16:16:public java.lang.String getId()
    19:20:public void setCourse(float)
    22:22:public float getCourse()
    25:26:public void setSpeed(float)
    28:28:public float getSpeed()
    31:32:public void setObservationList(java.util.ArrayList)
    41:44:public Contact(java.lang.String)
    46:51:public Contact(java.lang.String,float,float)
    54:54:public int getLastBearingRate()
    63:64:public void addObservation(com.spatialind.imoboard.Observation)
    70:71:public void clearObservations()
com.spatialind.imoboard.ContactDatabaseAdapter:
    private static final java.lang.String DATABASE_NAME
    private static final java.lang.String TABLE_CONTACTS
    private static final java.lang.String TABLE_OBSERVATIONS
    private static final java.lang.String TABLE_OWNSHIP
    private static final int DATABASE_VERSION
    public static final java.lang.String KEY_ID
    public static final java.lang.String KEY_NAME
    public static final java.lang.String KEY_TIME
    public static final java.lang.String KEY_BEARING
    public static final java.lang.String KEY_RANGE
    public static final java.lang.String KEY_COURSE
    public static final java.lang.String KEY_SPEED
    private static final java.lang.String TABLE_CONTACTS_CREATE
    private static final java.lang.String TABLE_OBSERVATIONS_CREATE
    private static final java.lang.String TABLE_OWNSHIP_CREATE
    170:178:public android.database.Cursor getCursorOfOwnShipCourse(java.lang.String)
    200:207:public long updateOwnShipCourse(java.lang.String,java.lang.String)
    212:219:public long updateOwnShipSpeed(java.lang.String,java.lang.String)
    272:272:public boolean deleteContact(long)
    342:344:private android.content.ContentValues createContentValues(java.lang.String)
com.spatialind.imoboard.ManeuveringBoardActivity:
    private static final int rangeAtLowestScale
    public static final java.lang.String PREF_SHOW_OBS_TIME
    public static final java.lang.String PREF_ROUND_VALUES
    public static final java.lang.String PREF_SHOW_DEGREES
    public static final java.lang.String PREF_SHOW_CPA
    public static final java.lang.String PREF_SCALE
    public static final java.lang.String PREF_USE_RECENT_DATA
com.spatialind.imoboard.ManeuveringBoardView:
    private static final int rangeAtLowestScale
    53:53:public java.util.ArrayList getTargetList()
    67:67:public boolean isShowCPA()
    81:81:public boolean isShowDegrees()
    95:95:public boolean isShowObservationTime()
    109:109:public boolean isUseFirstAndLastObservations()
    123:123:public boolean isRoundValues()
    131:131:public int getScale()
    139:139:public com.spatialind.imoboard.Contact getContact()
    147:147:public float getOwnShipCourse()
    155:155:public float getOwnShipSpeed()
    163:163:public int getColorMode()
    171:171:public boolean isShowBacklight()
com.spatialind.imoboard.MoboUtilities:
    213:234:public static android.graphics.PointF getIntersection(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.Point)
com.spatialind.imoboard.Observation:
    private int angleOnTheBow
    38:39:public void setAngleOnTheBow(int)
    41:41:public int getAngleOnTheBow()
    48:53:public Observation(com.spatialind.imoboard.ObservationType,int)
    55:61:public Observation(com.spatialind.imoboard.ObservationType,int,int)
    63:70:public Observation(com.spatialind.imoboard.ObservationType,int,int,int)
    72:79:public Observation(java.util.Date,com.spatialind.imoboard.ObservationType,int,int,int)
com.spatialind.imoboard.ObservationListActivity:
    444:447:private static java.lang.String pad(int)
    485:486:private void updateArray()
com.spatialind.imoboard.R
com.spatialind.imoboard.R$array
com.spatialind.imoboard.R$attr
com.spatialind.imoboard.R$color
com.spatialind.imoboard.R$drawable
com.spatialind.imoboard.R$id
com.spatialind.imoboard.R$layout
com.spatialind.imoboard.R$menu
com.spatialind.imoboard.R$string
com.spatialind.imoboard.R$xml
com.spatialind.imoboard.ShipCompassView:
    37:37:public boolean isBearingMode()
    46:46:public float getBearing()
    55:55:public float getCourse()
    69:69:public int getIdentifier()
    113:123:private int measure(int)
    127:130:private int measureHeight(int)
com.spatialind.imoboard.SplashActivity:
    private static final java.lang.String BASE64_PUBLIC_KEY
